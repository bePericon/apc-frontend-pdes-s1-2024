name: Deployment Pipeline

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCERL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - feature/APC-35-add-ci-cd
      # - master
      # - develop

jobs:
  avoid_reduncy:
    runs-on: ubuntu-22.04
    steps:
      - name: Cancel Previous Redundant Builds
        uses: styfle/cancel-workflow-action@0.12.1
        with:
          access_token: ${{ github.token }}

  lint:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.17
      - name: Install dependencies
        run: npm ci -f
      - name: Lint
        run: npm run lint

  build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.17
      - name: Install dependencies
        run: npm ci -f
      - name: Build
        run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist

  test:
    needs: [lint, build]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18.17
      - name: Install dependencies
        run: npm ci -f
      - uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist
      - name: Test
        run: npm run test

  # e2e:
  #   needs: [lint, build]
  #   runs-on: ubuntu-22.04
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-node@v4
  #       with:
  #         node-version: 18.17
  #     - name: Install dependencies
  #       run: npm ci -f
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: dist
  #         path: dist
  #     - name: E2E tests

  deploy:
    # needs: [test, e2e]
    needs: [test]
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm i --global vercel
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}